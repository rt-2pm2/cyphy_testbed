<?xml version="1.0"?>
<!--
Global Launch File to start the system.
The following nodes will be started:
- VRPN Client Node
- Estimator Nodes for the drones
- Arena Node
- Commander + Guidance Nodes
-->
<launch>
	<!--
		<arg name="vehicle_frame" default="cf3" />
		<arg name="uri" default="radio://0/80/2M/E7E7E7E703" />
		<arg name="vehicle_frame" default="cf1" />
		<arg name="uri" default="radio://0/121/2M/E7E7E7E7E7" />
	-->
		<arg name="vehicle_frame" default="cf2" />
		<arg name="uri" default="radio://0/100/2M/E7E7E7E702" />

		<arg name="target" default="target" />
		<arg name="nodeB" default="nodeB" />
		<arg name="ip" default="192.168.1.198" />
		<arg name="port" default="3883" />

		<arg name="server" default="RS2" />
		<arg name="provide_position" default="True" />
		<arg name="provide_distance" default="False" />
		<arg name="provide_pose" default="False" />


			<!-- ===================================== -->
			<!-- Launch the data aquisition component 
				Source of raw pose data: VRPN Server 
			-->
		<include file="$(find demo_launchers)/launch/vrpn_launch.launch">
			<arg name="ip" value="$(arg ip)" />
			<arg name="port" value="$(arg port)" />
		</include>


		<!-- ===================================== -->
		<!-- Launch the estimator of the object state from
			the VRPN raw data.
		-->
		<group ns="$(arg vehicle_frame)">
			<!--
				===========================================================================
				Run the data aggregator node, which takes the information from external 
				sensors and provides an estimator of the drone state.
			-->
			<node pkg="state_aggregator" name="aggregator" type="state_aggregator" 
				respawn="true"
				respawn_delay="3"
				output="screen"> 
				<!-- Topic parameters -->
			<param name="sigmax" value="0.01" type='double' />
			<param name="sigmay" value="0.001" type='double' />
			<param name="param/target_name" value="$(arg vehicle_frame)" />

			<param name="topics/out_ext_position_topic" value="external_position" />
			<param name="topics/out_ext_pose_topic" value="external_pose" />
			<param name="topics/out_ext_pose_rpy_topic" value="external_pose_rpy" />
			<param name="topics/out_ext_odom_topic" value="external_odom" />
			<param name="topics/out_ext_codom_topic" value="external_codom" />

			<param name="time_delay" value="0.0" type='double' />
		</node>
	</group>


	<!-- ===================================== -->
	<!-- Launch the Arena Node
		<include file="$(find demo_launchers)/launch/arena.launch">
		</include>
	-->

		<!-- ======================================== -->
		<!-- Launch the controller/guidance componets -->
		<include file="$(find demo_launchers)/launch/commander_launch.launch">
			<arg name="vehicle_frame" value="$(arg vehicle_frame)" />
			<arg name="commander_id" value="cm3" />
			<arg name="obst_frame" value="cf2" />
		</include>

		<!--
			<include file="$(find demo_launchers)/launch/radio_server.launch">
			<arg name="rs_name" value="$(arg server)" />
			</include>


			<include file="$(find demo_launchers)/launch/cf_bridge.launch">
			<arg name="uri" value="$(arg uri)" />
			<arg name="frame" value="$(arg vehicle_frame)" />
			<arg name="server" value="$(arg server)" />
			<arg name="provide_position" value="$(arg provide_position)" />
			<arg name="provide_distance" value="$(arg provide_distance)" />
			<arg name="provide_pose" value="$(arg provide_pose)" />
			<arg name="controller_type" value="Mellinger" />
			<arg name="estimator_type" value="EKF" />
			</include>
		-->

			<!-- ===================================== -->
			<!-- Launch the Arena Node
			-->
			<include file="$(find demo_launchers)/launch/simulator.launch">
			</include>

			<!--
				===================================================
				Control Router 
			-->
			<node name="control_router"
				pkg="control_router"
				type="control_router_node"
				output="screen">
			<param name="param/vehicle_name" value="$(arg vehicle_frame)" />
		</node>

		<node name="cis_supervisor"
			pkg="cis_supervisor"
			type="cis_supervisor"
			output="screen">
		<rosparam file="$(find cis_supervisor)/config/cis_supervisor_params.yaml" />
	</node>

	<!-- GEOMETRIC EXTERNAL CONTROLLERS -->
	<!-- I would like to remove these namespace in the future and do
		everything with the topic names
		<group ns="$(arg vehicle_frame)"> 
		<include file="$(find demo_launchers)/launch/ext_control.launch">
		<arg name="topics/setpoint_topic" value="/$(arg vehicle_frame)/setpoint" />
		<arg name="topics/control_topic" value="/area0/controller/geometric_ctrl/$(arg vehicle_frame)/control" />
		<arg name="topics/ctrl_perf_topic" value="/$(arg vehicle_frame)/ctrl_perf" />
		<arg name="topics/state_topic" value="/$(arg vehicle_frame)/external_codom" />
		<arg name="param/vehicle_name" value="$(arg vehicle_frame)" />
		<arg name="control_mode" value="ANGLES" />
		</include>

		<include file="$(find demo_launchers)/launch/ext_control2.launch">
		<arg name="topics/setpoint_topic" value="/$(arg vehicle_frame)/setpoint" />
		<arg name="topics/control_topic" value="/area0/controller/geometric_ctrl2/$(arg vehicle_frame)/control" />
		<arg name="topics/ctrl_perf_topic" value="/$(arg vehicle_frame)/ctrl_perf" />
		<arg name="topics/state_topic" value="/$(arg vehicle_frame)/external_codom" />
		<arg name="param/vehicle_name" value="$(arg vehicle_frame)" />
		<arg name="control_mode" value="ANGLES" />
		</include>


		<node name="cmd_vel_converter"
		pkg="controller"
		type="cmd_vel_converter_node"
		output="screen">
		<param name="topics/control" value="/$(arg vehicle_frame)/control" />
		<param name="topics/cmd_vel" value="/$(arg vehicle_frame)/cmd_vel" />
		</node>
		</group>

	-->

	<node pkg="rqt_plot"
			type="rqt_plot" 
			name="$(arg vehicle_frame)_plot_estimate" 
		args="/$(arg vehicle_frame)/external_codom/v/x:y:z">
	</node>


	<node pkg="rosbag" name="cis_$(arg vehicle_frame)" type="record" args="-O /tmp/$(arg vehicle_frame)_cis  /$(arg vehicle_frame)/external_codom /$(arg vehicle_frame)/setpoint /CISSupervisor/$(arg vehicle_frame)/cis_perf /$(arg vehicle_frame)/xsim_state"/>


			<!--
				<node pkg="rosbag" name="mocap_$(arg vehicle_frame)" type="record" args="-O /tmp/$(arg vehicle_frame)_mocap  /$(arg vehicle_frame)/external_codom /$(arg vehicle_frame)/external_pose_rpy /area0/sensors/optitrack/$(arg vehicle_frame)/data"/>
			-->

			</launch>


