<?xml version="1.0"?>
<!--
    Global Launch File to start the system.
    The following nodes will be started:
     - VRPN Client Node
     - Estimator Nodes for the drones
     - Arena Node
     - Commander + Guidance Nodes
-->
<launch>
    <arg name="vehicle_frame" default="cf2" />
    <arg name="uri" default="radio://0/100/2M/E7E7E7E702" />
<!--
    <arg name="vehicle_frame" default="cf1" />
    <arg name="uri" default="radio://0/121/2M/E7E7E7E7E7" />
-->
    <arg name="target" default="target" />
    <arg name="nodeB" default="nodeB" />
    <arg name="ip" default="192.168.1.198" />
    <arg name="port" default="3883" />
    
    <arg name="server" default="RS2" />
	<arg name="provide_position" default="True" />
    <arg name="provide_distance" default="False" />
    <arg name="provide_pose" default="False" />


<!-- ===================================== -->
<!-- Launch the data aquisition component 
     Source of raw pose data: VRPN Server 
     -->
<include file="$(find demo_launchers)/launch/vrpn_launch.launch">
    <arg name="ip" value="$(arg ip)" />
    <arg name="port" value="$(arg port)" />
</include>


<!-- ===================================== -->
<!-- Launch the estimator of the object state from
     the VRPN raw data.
     -->
<include file="$(find demo_launchers)/launch/estimator_launch.launch">
    <arg name="vehicle_frame" value="$(arg vehicle_frame)" />
</include>


<!-- ======================================== -->
<!-- Launch the controller/guidance componets -->
<include file="$(find demo_launchers)/launch/commander_launch.launch">
    <arg name="vehicle_frame" value="$(arg vehicle_frame)" />
    <arg name="commander_id" value="cm3" />
    <arg name="obst_frame" value="cf2" />
</include>

<!-- ======================================== -->
<!-- Connection to the crazyflie vehicle -->
<include file="$(find demo_launchers)/launch/radio_server.launch">
    <arg name="rs_name" value="$(arg server)" />
</include>

<include file="$(find demo_launchers)/launch/cf_bridge.launch">
        <arg name="uri" value="$(arg uri)" />
        <arg name="frame" value="$(arg vehicle_frame)" />
        <arg name="server" value="$(arg server)" />
        <arg name="provide_position" value="$(arg provide_position)" />
        <arg name="provide_distance" value="$(arg provide_distance)" />
        <arg name="provide_pose" value="$(arg provide_pose)" />
        <arg name="controller_type" value="Mellinger" />
	<arg name="control_mode" value="0" />
</include>


<!--
    ===================================================
    Control Router 
    This node manages the control switching on the network
-->
    <node name="control_router"
        pkg="control_router"
        type="control_router_node"
        output="screen">
        <param name="param/vehicle_name" value="$(arg vehicle_frame)" />
    </node>

    <!-- GEOMETRIC EXTERNAL CONTROLLERS -->
    <!--
    <group ns="$(arg vehicle_frame)"> 
	    <include file="$(find demo_launchers)/launch/ext_control.launch">
		    <arg name="topics/setpoint_topic" value="/$(arg vehicle_frame)/setpoint" />
		    <arg name="topics/control_topic" value="/area0/controller/geometric_ctrl/$(arg vehicle_frame)/control" />
		    <arg name="topics/ctrl_perf_topic" value="/$(arg vehicle_frame)/ctrl_perf" />
		    <arg name="topics/state_topic" value="/$(arg vehicle_frame)/external_codom" />
		    <arg name="param/vehicle_name" value="$(arg vehicle_frame)" />
		    <arg name="control_mode" value="ANGLES" />
	    </include>
    </group>
    -->
    
    <node name="lfd_controller"
	    pkg="lfd_controller"
	    type="lfd_controller"
	    output="screen">
    <rosparam file="$(find lfd_controller)/config/lfd_controller_params.yaml" />
    </node>


    
    <group ns="$(arg vehicle_frame)"> 
	    <node name="cmd_vel_converter" pkg="controller" type="cmd_vel_converter_node" output="screen">
		    <param name="topics/control" value="/$(arg vehicle_frame)/control" />
		    <param name="topics/cmd_vel" value="/$(arg vehicle_frame)/cmd_vel" />
	    </node>
    </group>



<node pkg="rosbag" name="lfd_$(arg vehicle_frame)_bag" type="record" args="-O /tmp/$(arg vehicle_frame)_lfd  /area0/sensors/optitrack/$(arg vehicle_frame)/data /$(arg vehicle_frame)/gyro  /$(arg vehicle_frame)/external_codom /$(arg vehicle_frame)/setpoint  /$(arg vehicle_frame)/control /$(arg vehicle_frame)/cmd_vel"/>


</launch>


