<?xml version="1.0"?>
<!--
Global Launch File to start the system.
The following nodes will be started:
- VRPN Client Node
- Estimator Nodes for the drones
- Arena Node
- Commander + Guidance Nodes
-->
<launch>
	<arg name="vehicle_frame" default="cf2" />
	<arg name="target" default="target" />
	<arg name="nodeB" default="nodeB" />
	<arg name="ip" default="192.168.1.198" />
	<arg name="port" default="3883" />


	<!-- ============================================================================ -->
        <!--    Launch the data aquisition component Source of raw pose data: VRPN Server -->
        <group ns="area0">
                <group ns="sensors">
                        <node 
                                pkg="vrpn_client_cyphy"
                                type="vrpn_client_node" 
                                name="optitrack"
                                output="screen"
                                respawn="true"
                                respawn_delay="3">
                        <rosparam subst_value="true">
                                server: $(arg ip)
                                port: $(arg port)
                                update_frequency: 360.0
                                frame_id: /world
                                use_server_time: true
                                broadcast_tf: false
                                refresh_tracker_frequency: 1.0
                        </rosparam>
                        </node>
                </group>
        </group>


	<!-- ============================================================================ -->
        <!--    Launch the state estimation component that uses the VRPN data             -->
	<group ns="$(arg vehicle_frame)">
                <node pkg="state_aggregator" name="aggregator" type="state_aggregator" 
                        respawn="true"
                        respawn_delay="3"
                        output="screen"> 
                        <!-- Topic parameters -->
                <param name="sigmax" value="0.5" type='double' />
                <param name="sigmay" value="0.0001" type='double' />
                <param name="param/target_name" value="$(arg vehicle_frame)" />

                <param name="topics/out_ext_position_topic" value="external_position" />
                <param name="topics/out_ext_pose_topic" value="external_pose" />
                <param name="topics/out_ext_pose_rpy_topic" value="external_pose_rpy" />
                <param name="topics/out_ext_odom_topic" value="external_odom" />
                <param name="topics/out_ext_codom_topic" value="external_codom" />

                <param name="time_delay" value="0.0" type='double' />
                </node>
	</group>
	

	<!-- =========================================== -->
        <!--    Launch the controller/guidance componets -->
	<group ns="$(arg vehicle_frame)">
		<!-- Commander Node -->
                <node name="Commander_Node" pkg="commander_interface" type="commander" output="screen">
                        <param name="param/vehicle_name" value="$(arg vehicle_frame)" type="str"/>
                </node>

		<!-- Geometric Controller -->
		<!--
		<node name="geometric_controller"
		      pkg="crazyflie_controllers"
		      type="geometric_controller_node"
		      output="screen">

		  <param name="param/vehicle_name" value="$(arg vehicle_frame)"/>
		  <param name="control_mode" value="RATES" />
		  
		  <param name="topics/setpoint" value="/$(arg vehicle_frame)/setpoint" />
		  <param name="topics/state" value="/$(arg vehicle_frame)/external_codom" />
		  <param name="topics/control" value="/area0/controller/geometric_ctrl/$(arg vehicle_frame)/control" />
		  <param name="topics/ctrl_perf" value="/$(arg vehicle_frame)/ctrl_perf" />
		  <rosparam file="$(find crazyflie_controllers)/config/geometric_controller/params.yaml" />
		</node>
		-->

		<!-- Flatoutput Controller -->
		<node name="fblin_controller"
		      pkg="crazyflie_controllers"
		      type="fblin_controller_node"
		      output="screen">

		  <param name="param/vehicle_name" value="$(arg vehicle_frame)"/>
		  <param name="topics/setpoint" value="/$(arg vehicle_frame)/setpoint" />
		  <param name="topics/state" value="/$(arg vehicle_frame)/external_codom" />
		  <param name="topics/control" value="/area0/controller/fblin_controller/$(arg vehicle_frame)/control" />
		  <rosparam file="$(find crazyflie_controllers)/config/fblin_controller/params.yaml" />
		</node>

		<!-- Converter node -->
		<node name="cmd_vel_converter"
			pkg="crazyflie_controllers"
			type="cmd_vel_converter_node"
			output="screen">
			<param name="topics/control" value="/$(arg vehicle_frame)/control" />
			<param name="topics/cmd_vel" value="/$(arg vehicle_frame)/cmd_vel" />
		</node>

		<!-- Guidance -->
                <node name="Guidance_Node" 
                        pkg="guidance" 
                        type="guidance_node.py" 
                        output="screen"
                        respawn="true"
                        respawn_delay="3"> 
                <param name="target_frame" value="$(arg vehicle_frame)" type='str' />
                <param name="topics/in_tg_pose_topic" value="target" type="str" />
                <param name="topics/in_vehicle_odom_topic" value="external_codom" type='str' />
                <param name="topics/in_obst_pose_topic" value="cf9" type='str'/>
                <param name="topics/out_ctrl_setpoint" value="setpoint" type="str" />
                </node>
	</group>


	<!-- ===================================================================== -->
	<!-- Control Router: This node manages the control switching on the network -->
	<node name="control_router"
		pkg="control_router"
		type="control_router_node"
		output="screen">
	<param name="param/vehicle_name" value="$(arg vehicle_frame)" />
	</node>



	<!-- ===================================== -->
	<!--          Launch the Arena Node	   -->
	<node pkg="rarena" name="arena" type="main.py" 
		output="screen" respawn="true" respawn_delay="10"> 
	</node>


	<!-- =========================== -->
	<!-- Launch the Simulator Node   -->
	<group ns="$(arg vehicle_frame)">
	    <node pkg="simulator"
		type="simulator"
		name="Simulated_Vehicle"
		output="screen">
		<param name="frame_name" value="$(arg vehicle_frame)" type='str'/>
		<param name="topics/input_control_topic" value="/$(arg vehicle_frame)/control" type='str'/>
		<param name="topics/output_sensor_topic" value="xsim_sensors" type='str'/>
		<param name="topics/output_state_topic" value="xsim_state" type='str'/>
		<param name="topics/output_simvrpn_topic" value="/area0/sensors/optitrack/$(arg vehicle_frame)/data" type='str'/>
		<rosparam file="$(find simulator)/config/simulator_params.yaml" />
	    </node>
	</group>
</launch>
